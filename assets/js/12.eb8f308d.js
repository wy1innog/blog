(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{431:function(s,t,a){"use strict";a.r(t);var e=a(2),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"aidl详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#aidl详解"}},[s._v("#")]),s._v(" AIDL详解")]),s._v(" "),t("p",[s._v("Created by: wylin\nCreated time: May 27, 2023 4:57 PM\nStatus: Approved")]),s._v(" "),t("h1",{attrs:{id:"一、aidl简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、aidl简介"}},[s._v("#")]),s._v(" 一、AIDL简介")]),s._v(" "),t("p",[t("code",[s._v("AIDL")]),s._v(" 全称"),t("code",[s._v("Android")]),s._v(" 接口定义语言（"),t("code",[s._v("Android Interface Definition Language")]),s._v("），是一种用于定义客户端和服务端之间的通信接口的语言，它可以让不同进程之间通过"),t("code",[s._v("IPC")]),s._v("（进程间通信）进行数据交互。"),t("code",[s._v("AIDL")]),s._v("的架构可以看作是一种"),t("code",[s._v("CS（Client-Server）")]),s._v("架构，即客户端-服务端架构。简单介绍如下：")]),s._v(" "),t("ol",[t("li",[s._v("客户端是指需要调用服务端提供的数据或功能的应用，它通过绑定服务端的"),t("code",[s._v("Service")]),s._v("来获取一个"),t("code",[s._v("IBinder")]),s._v("对象，然后通过该对象调用服务端暴露出来的接口方法 。")]),s._v(" "),t("li",[s._v("服务端是指提供数据或功能给客户端的应用，它通过创建一个"),t("code",[s._v("Service")]),s._v("并在"),t("code",[s._v("onBind()")]),s._v("方法中返回一个"),t("code",[s._v("IBinder")]),s._v("对象来实现通信接口，该对象需要重写"),t("code",[s._v(".aidl")]),s._v("文件中定义的接口方法 。")]),s._v(" "),t("li",[s._v("客户端和服务端需要共享一个"),t("code",[s._v(".aidl")]),s._v("文件，用来声明通信接口和方法，该文件会被"),t("code",[s._v("Android SDK")]),s._v("工具转换成一个"),t("code",[s._v("Java")]),s._v("接口，该接口包含一个"),t("code",[s._v("Stub")]),s._v("类和一个"),t("code",[s._v("Proxy")]),s._v("类 。")])]),s._v(" "),t("h1",{attrs:{id:"二、aidl使用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、aidl使用场景"}},[s._v("#")]),s._v(" 二、AIDL使用场景")]),s._v(" "),t("p",[t("code",[s._v("Android")]),s._v("系统中的"),t("code",[s._v("IPC")]),s._v("不只有"),t("code",[s._v("AIDL")]),s._v("，还提供了以下几种常用的"),t("code",[s._v("IPC")]),s._v("的方案：")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("Messager")])]),s._v(" "),t("p",[s._v("一种基于"),t("code",[s._v("AIDL")]),s._v("的"),t("code",[s._v("IPC")]),s._v("通信的方式，它对"),t("code",[s._v("AIDL")]),s._v("进行了封装，简化了使用过程，只需要创建一个"),t("code",[s._v("Handler")]),s._v("对象来处理消息。"),t("code",[s._v("Messenger")]),s._v("只支持单线程串行请求，只能传输"),t("code",[s._v("Message")]),s._v("对象，不能传输自定义的"),t("code",[s._v("Parcelable")]),s._v("对象。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("ContentProvider")])]),s._v(" "),t("p",[s._v("一种用于提供数据访问接口的"),t("code",[s._v("IPC")]),s._v("通信的方式，它可以让不同进程之间通过"),t("code",[s._v("URI")]),s._v("和"),t("code",[s._v("Cursor")]),s._v("进行数据交互。"),t("code",[s._v("ContentProvider")]),s._v("可以处理多线程并发请求，可以传输任意类型的数据，但使用过程比较繁琐，需要实现多个方法。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Socket")])]),s._v(" "),t("p",[s._v("一种基于"),t("code",[s._v("TCP/IP")]),s._v("协议的"),t("code",[s._v("IPC")]),s._v("通信的方式，它可以让不同进程之间通过网络套接字进行数据交互。"),t("code",[s._v("Socket")]),s._v("可以处理多线程并发请求，可以传输任意类型的数据，但使用过程比较底层，需要处理网络异常和安全问题。")])])]),s._v(" "),t("p",[s._v("可以根据不同的场景和需求，选择合适的"),t("code",[s._v("IPC")]),s._v("的方式。一般来说：\n如果需要实现"),t("strong",[s._v("跨应用的数据共享")]),s._v("，可以使用"),t("code",[s._v("ContentProvider")]),s._v("。\n如果需要实现"),t("strong",[s._v("跨应用的功能调用")]),s._v("，可以使用"),t("code",[s._v("AIDL")]),s._v("。\n如果需要实现"),t("strong",[s._v("跨应用的消息传递")]),s._v("，可以使用"),t("code",[s._v("Messenger")]),s._v("。\n如果需要实现"),t("strong",[s._v("跨网络的数据交换")]),s._v("，可以使用"),t("code",[s._v("Socket")]),s._v("。")]),s._v(" "),t("h1",{attrs:{id:"三、实践"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、实践"}},[s._v("#")]),s._v(" 三、实践")]),s._v(" "),t("p",[s._v("假设我们有一个服务端，提供一个计算器的功能，可以进行加减乘除等多种运算。我们想让其他客户端应用也能调用这个服务端，进行计算。")]),s._v(" "),t("p",[s._v("在实际工作中，可以将"),t("code",[s._v("AIDL")]),s._v("的接口封装到一个独立的工程（"),t("code",[s._v("Module")]),s._v("）中，使用时将该工程编译成一个"),t("code",[s._v("jar")]),s._v("包，再交给其它模块使用。这样做可以避免需要同时在"),t("code",[s._v("APP")]),s._v("工程以及"),t("code",[s._v("Service")]),s._v("工程中定义"),t("code",[s._v("AIDL")]),s._v("接口的情况，也方便我们后期对"),t("code",[s._v("AIDL")]),s._v("文件进行修改和维护。")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("创建"),t("code",[s._v("SDK")]),s._v("工程，定义"),t("code",[s._v("AIDL")]),s._v("接口")]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("SDK")]),s._v("工程中，定义一个"),t("code",[s._v("AIDL")]),s._v("接口，声明我们想要提供的方法和参数。例如，我们可以创建一个"),t("code",[s._v("ICalculator.aidl")]),s._v("文件，内容如下：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("interface ICalculator "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\tint add"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("int a, int b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tint subtract"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("int a, int b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tint multiply"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("int a, int b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\tint divide"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("int a, int b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("创建"),t("code",[s._v("Service")]),s._v("工程，实现"),t("code",[s._v("AIDL")]),s._v("接口")]),s._v(" "),t("ul",[t("li",[s._v("在服务端应用中，创建一个"),t("code",[s._v("Service")]),s._v("类，实现"),t("code",[s._v("AIDL")]),s._v("接口，并在"),t("code",[s._v("onBind")]),s._v("方法中返回一个"),t("code",[s._v("IBinder")]),s._v("对象。例如，可以创建一个"),t("code",[s._v("CalculatorService")]),s._v("类")]),s._v(" "),t("li",[s._v("在服务端应用中，注册"),t("code",[s._v("Service")]),s._v("，并设置"),t("code",[s._v("android:enabled")]),s._v("和"),t("code",[s._v("android:exported")]),s._v("属性为"),t("code",[s._v("true")]),s._v("，以便其他应用可以访问它")])]),s._v(" "),t("p",[s._v("如果需要还可以添加一个"),t("code",[s._v("intent-filter")]),s._v("，指定一个"),t("code",[s._v("action")]),s._v("，让其他应用可以通过"),t("code",[s._v("intent")]),s._v("启动服务，同时服务端也可以通过读取"),t("code",[s._v("intent")]),s._v("中的"),t("code",[s._v("action")]),s._v("来过滤绑定请求")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Android8")]),s._v(" 之后"),t("code",[s._v("Service")]),s._v("启动需要添加前台"),t("code",[s._v("Service")])])])]),s._v(" "),t("li",[t("p",[s._v("创建App工程，调用"),t("code",[s._v("AIDL")]),s._v("接口")]),s._v(" "),t("p",[s._v("在客户端应用中，创建一个"),t("code",[s._v("ServiceConnection")]),s._v("对象，实现"),t("code",[s._v("onServiceConnected")]),s._v("和"),t("code",[s._v("onServiceDisconnected")]),s._v("方法，在"),t("code",[s._v("onServiceConnected")]),s._v("方法中获取"),t("code",[s._v("IBinder")]),s._v("对象的代理，并转换为"),t("code",[s._v("AIDL")]),s._v("接口类型。")])])]),s._v(" "),t("h1",{attrs:{id:"四、问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、问题"}},[s._v("#")]),s._v(" 四、问题")]),s._v(" "),t("h2",{attrs:{id:"_1-数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据类型"}},[s._v("#")]),s._v(" 1. 数据类型")]),s._v(" "),t("p",[t("code",[s._v("AIDL")]),s._v("支持的数据类型有：\n"),t("code",[s._v("Java")]),s._v("编程语言中的所有原始类型（如"),t("code",[s._v("int")]),s._v("、"),t("code",[s._v("long")]),s._v("、"),t("code",[s._v("char")]),s._v("、"),t("code",[s._v("boolean")]),s._v("等）\n"),t("code",[s._v("String")]),s._v("和"),t("code",[s._v("CharSequence")]),s._v(" "),t("code",[s._v("List")]),s._v("，只支持"),t("code",[s._v("ArrayList")]),s._v(",里面每个元素都必须能够被"),t("code",[s._v("AIDL")]),s._v("支持\n"),t("code",[s._v("Map")]),s._v("，只支持"),t("code",[s._v("HashMap")]),s._v(",里面的每个元素都必须被"),t("code",[s._v("AIDL")]),s._v("支持,包括"),t("code",[s._v("key")]),s._v("和"),t("code",[s._v("value")]),s._v(" "),t("code",[s._v("Parcelable")]),s._v("，所有实现了"),t("code",[s._v("Parcelable")]),s._v("接口的对象\n"),t("code",[s._v("Serializable")]),s._v("，所有实现了"),t("code",[s._v("Serializable")]),s._v("接口的对象\n"),t("code",[s._v("AIDL")]),s._v("，所有的"),t("code",[s._v("AIDL")]),s._v("接口本身也可以在"),t("code",[s._v("AIDL")]),s._v("文件中使用")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("Parcelable")])]),s._v(" "),t("p",[s._v("在安卓中非基本数据类型的对象，除了"),t("code",[s._v("String")]),s._v("和"),t("code",[s._v("CharSequence")]),s._v("都是不可以直接通过"),t("code",[s._v("AIDL")]),s._v("进行传输的，需要先进行序列化操作。序列化就是将对象转换为可存储或可传输的状态，序列化后的对象可以在网络上进行传输，也可以存储到本地。\n"),t("code",[s._v("Parcelable")]),s._v(" 是安卓实现的可序列化接口。它假定一种特定的结构和处理方式，这样一个实现了 "),t("code",[s._v("Parcelable")]),s._v("接口的对象可以相对快速地进行序列化和反序列化。\n为了将一个对象写入 "),t("code",[s._v("Parcel")]),s._v("，该对象必须实现 "),t("code",[s._v("Parcelable")]),s._v(" 接口，并提供 "),t("code",[s._v("writeToParcel (android.os.Parcel, int)")]),s._v(" 方法和一个非空的 "),t("code",[s._v("CREATOR")]),s._v(" 字段，该字段实现了 "),t("code",[s._v("Parcelable.Creator")]),s._v(" 接口。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Serializable")])]),s._v(" "),t("p",[t("code",[s._v("Serializable")]),s._v(" 是 "),t("code",[s._v("Java")]),s._v(" 提供的一个序列化接口，它是一个空接口，为对象提供标准的序列化和反序列化操作。使用 "),t("code",[s._v("Serializable")]),s._v(" 来实现序列化相当简单，只需对象实现了"),t("code",[s._v("Serializable")]),s._v(" 接口即可实现默认的序列化过程。")]),s._v(" "),t("p",[t("code",[s._v("Serializable")]),s._v(" 的序列化和反序列化过程由系统自动完成。")])])]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("类型")]),s._v(" "),t("th",[s._v("优点")]),s._v(" "),t("th",[s._v("缺点")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("Parcelable")]),s._v(" "),t("td",[s._v("直接在内存中进行读写，效率较高，而且没有额外的开销。")]),s._v(" "),t("td",[s._v("需要开发者手动编写代码，实现 writeToParcel 方法和 Parcelable.Creator 接口，实现上较为繁琐。")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v("Serializable")]),s._v(" 实现简单，不需要开发者手动编写大量的代码")]),s._v(" "),t("td",[s._v("使用了反射机制，效率较低，而且会产生大量的临时变量，增加内存开销。")]),s._v(" "),t("td")])])]),s._v(" "),t("p",[s._v("一般来说，如果需要将数据通过网络传输或者持久化到本地，建议使用 "),t("code",[s._v("Serializable")]),s._v(" 接口，如果只是在应用内部进行数据传递，建议使用 "),t("code",[s._v("Parcelable")]),s._v("接口。")]),s._v(" "),t("h2",{attrs:{id:"_2-数据流方向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据流方向"}},[s._v("#")]),s._v(" 2. 数据流方向")]),s._v(" "),t("p",[s._v("在传递序列化参数时，必须定义这些参数的数据流方向，"),t("code",[s._v("in")]),s._v("、"),t("code",[s._v("out")]),s._v("、"),t("code",[s._v("inout")]),s._v("关键字的影响主要体现在参数对象在传输过程中是否被复制和修改。具体来说：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("in")]),s._v("：表示数据从客户端流向服务端，客户端会将参数对象复制一份并发送给服务端，服务端收到后可以对该对象进行修改，但不会影响客户端的原始对象 。")]),s._v(" "),t("li",[t("strong",[s._v("out")]),s._v("：表示数据从服务端流向客户端，客户端会将参数对象的空引用发送给服务端，服务端收到后可以创建一个新的对象并赋值给该引用，然后返回给客户端，客户端会将原始对象替换成服务端返回的对象 。")]),s._v(" "),t("li",[t("strong",[s._v("inout")]),s._v("：表示数据双向流动，客户端会将参数对象复制一份并发送给服务端，服务端收到后可以对该对象进行修改，并将修改后的对象返回给客户端，客户端会将原始对象替换成服务端返回的对象 。")])]),s._v(" "),t("p",[s._v("注意事项：\n如果参数对象是不可变的（如"),t("code",[s._v("String")]),s._v("和其它基本数据类型），则不需要使用"),t("code",[s._v("out")]),s._v("或"),t("code",[s._v("inout")]),s._v("关键字，因为服务端无法修改其内容 。\n如果参数对象是可变的（如"),t("code",[s._v("List")]),s._v("或"),t("code",[s._v("Map")]),s._v("），则需要根据实际需求选择合适的关键字，以避免不必要的数据拷贝和传输 。\n"),t("code",[s._v("inout")]),s._v("对"),t("code",[s._v("AIDL")]),s._v("接口的性能有着不小的影响，一定不要滥用。")]),s._v(" "),t("h2",{attrs:{id:"_3-传递复数个对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-传递复数个对象"}},[s._v("#")]),s._v(" 3. 传递复数个对象")]),s._v(" "),t("p",[t("code",[s._v("AIDL")]),s._v(" 支持传递一些基本类型和 "),t("code",[s._v("Parcelable")]),s._v(" 类型的数据。如果需要传递一些复杂的对象或者多个对象以及数量不定的对象时，可以使用 "),t("code",[s._v("Bundle")]),s._v(" 类来封装这些数据，然后通过 "),t("code",[s._v("AIDL")]),s._v(" 接口传递 "),t("code",[s._v("Bundle")]),s._v(" 对象。"),t("code",[s._v("Bundle")]),s._v(" 类是一个键值对的容器，它可以存储不同类型的数据，并且实现了 "),t("code",[s._v("Parcelable")]),s._v(" 接口，所以可以在进程间传输。\n如果 "),t("code",[s._v("AIDL")]),s._v(" 接口包含接收"),t("code",[s._v("Bundle")]),s._v("作为参数（预计包含 "),t("code",[s._v("Parcelable")]),s._v(" 类型）的方法，则在尝试从3读取之前，请务必通过调用 "),t("code",[s._v("Bundle.setClassLoader(ClassLoader)")]),s._v(" 设置"),t("code",[s._v("Bundle")]),s._v("的类加载器。否则，即使在应用中正确定义 "),t("code",[s._v("Parcelable")]),s._v(" 类型，也会遇到 "),t("code",[s._v("ClassNotFoundException")])]),s._v(" "),t("h2",{attrs:{id:"_4-传递大文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-传递大文件"}},[s._v("#")]),s._v(" 4. 传递大文件")]),s._v(" "),t("p",[t("code",[s._v("AIDL")]),s._v("是一种基于"),t("code",[s._v("Binder")]),s._v("实现的跨进程调用方案，"),t("code",[s._v("Binder")]),s._v(" 对传输数据大小有限制，传输超过 1M 的文件就会报 "),t("code",[s._v("android.os.TransactionTooLargeException")]),s._v(" 异常。不过依然有大文件传输的解决方案，其中一种解决办法是，使用"),t("code",[s._v("AIDL")]),s._v("传递文件描述符"),t("code",[s._v("ParcelFileDescriptor")]),s._v("，来实现超大型文件的跨进程传输。\n该部分内容较多，可以查看文章：《Android 使用AIDL传输超大型文件》\n"),t("a",{attrs:{href:"https://juejin.cn/post/7218615271384088633",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://juejin.cn/post/7218615271384088633"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"_5-耗时操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-耗时操作"}},[s._v("#")]),s._v(" 5. 耗时操作")]),s._v(" "),t("p",[t("code",[s._v("Android AIDL")]),s._v(" 通信本身是一个耗时操作，因为它涉及到进程间的数据传输和序列化/反序列化的过程。如果在「客户端」的主线程中调用 "),t("code",[s._v("AIDL")]),s._v(" 接口，而且「服务端」的方法执行比较耗时，就会导致「客户端」主线程被阻塞，从而引发"),t("code",[s._v("ANR")]),s._v("。\n为了避免 "),t("code",[s._v("AIDL")]),s._v(" 引起的 "),t("code",[s._v("ANR")]),s._v("，可以采取以下这些措施：")]),s._v(" "),t("ul",[t("li",[s._v("不要在主线程中调用 "),t("code",[s._v("AIDL")]),s._v(" 接口，而是使用子线程或者异步任务来进行 "),t("code",[s._v("IPC")]),s._v("。")]),s._v(" "),t("li",[s._v("不要在 "),t("code",[s._v("onServiceConnected ()")]),s._v(" 或者 "),t("code",[s._v("onServiceDisconnected ()")]),s._v(" 中直接操作服务端方法，因为这些方法是在主线程中执行的。")]),s._v(" "),t("li",[s._v("使用"),t("code",[s._v("oneway")]),s._v("键字来修饰 "),t("code",[s._v("AIDL")]),s._v(" 接口，使得 "),t("code",[s._v("IPC")]),s._v(" 调用变成非阻塞的。")])]),s._v(" "),t("p",[t("strong",[t("code",[s._v("Oneway")]),s._v("简介")])]),s._v(" "),t("p",[t("code",[s._v("oneway")]),s._v(" 是"),t("code",[s._v("AIDL")]),s._v("定义接口时可选的一个关键字，它可以修饰 "),t("code",[s._v("AIDL")]),s._v(" 接口中的方法，修改远程调用的行为。\n"),t("code",[s._v("oneway")]),s._v("主要有以下两个特性：\n将远程调用改为「异步调用」，使得远程调用变成非阻塞式的，客户端不需要等待服务端的处理，只是发送数据并立即返回。\n"),t("code",[s._v("oneway")]),s._v("修饰方法，在同一个"),t("code",[s._v("IBinder")]),s._v("对象调用中，会按照调用顺序依次执行。")]),s._v(" "),t("p",[t("strong",[t("code",[s._v("Oneway")]),s._v("的使用场景")])]),s._v(" "),t("p",[s._v("使用 "),t("code",[s._v("oneway")]),s._v(" 的场景一般是当"),t("strong",[s._v("不需要等待服务端的返回值或者回调")]),s._v("时，可以提高 "),t("code",[s._v("IPC")]),s._v(" 的效率。例如，您可能需要向服务端发送一些控制命令或者通知，而不关心服务端是否处理成功。\n"),t("code",[s._v("oneway")]),s._v("可以用来修饰在"),t("code",[s._v("interface")]),s._v("之前，这样会使"),t("code",[s._v("interface")]),s._v("内所有的方法都隐式地带上"),t("code",[s._v("oneway")]),s._v("，也可以修饰在"),t("code",[s._v("interface")]),s._v("里的各个方法之前。")]),s._v(" "),t("p",[t("code",[s._v("Oneway")]),s._v("的注意事项")]),s._v(" "),t("p",[s._v("给"),t("code",[s._v("AIDL")]),s._v("接口添加"),t("code",[s._v("oneway")]),s._v("关键词有以下的事项需要注意：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("oneway")]),s._v(" 修饰本地调用没有效果，仍然是同步的，「客户端」需要等待「服务端」的处理。")]),s._v(" "),t("li",[t("code",[s._v("oneway")]),s._v(" 不能用于修饰有返回值的方法，或者抛出异常，因为「客户端」无法接收到这些信息。")]),s._v(" "),t("li",[s._v("同一个"),t("code",[s._v("IBinder")]),s._v("对象进行"),t("code",[s._v("oneway")]),s._v("调用，这些调用会按照原始调用的顺序依次执行。不同的"),t("code",[s._v("IBinder")]),s._v("对象可能导致调用顺序和执行顺序不一致。\n"),t("code",[s._v("oneway")]),s._v(" 要谨慎用于修饰调用极其频繁的"),t("code",[s._v("IPC")]),s._v("接口\n当「服务端」的处理较慢，但是「客户端」的"),t("code",[s._v("oneway")]),s._v("调用非常频繁时，来不及处理的调用会占满"),t("code",[s._v("binder")]),s._v("驱动的缓存，导致"),t("code",[s._v("transaction failed")]),s._v("。")])]),s._v(" "),t("h2",{attrs:{id:"_6-服务端向客户端发起回调"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-服务端向客户端发起回调"}},[s._v("#")]),s._v(" 6. 服务端向客户端发起回调")]),s._v(" "),t("p",[s._v("如果尝试针对同一个"),t("code",[s._v("listener")]),s._v("通过"),t("code",[s._v("registerListener")]),s._v("和"),t("code",[s._v("unRegisterLisenter")]),s._v("接口来注册和取消注册，会发现他们的")]),s._v(" "),t("blockquote",[t("p",[s._v("我们注册给服务端的方法的签名和我们解注册时注册再传给服务端的方法签名是不一样的，因为"),t("code",[s._v("AIDL")]),s._v("涉及到对象的序列化，导致两次传递给服务端的对象并不是同一个，如果我们把"),t("code",[s._v("listener")]),s._v("保存到"),t("code",[s._v("List")]),s._v("中，实际我们是无法找到我们"),t("code",[s._v("List")]),s._v("中保存的是哪一个的")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("D/AIDLCalculatorService: onCreate:\nD/AIDLCalculatorService: registerListener: com.ihblu.sdk.listener.ICalculatorListener$Stub$Proxy@b0013fd\nD/AIDLCalculatorService: unregisterListener: com.ihblu.sdk.listener.ICalculatorListener$Stub$Proxy@7cdc8f2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("如果在服务端打印的是"),t("code",[s._v("listener.asBinder()")]),s._v("则会显示是同一个对象")]),s._v(" "),t("p",[s._v("服务端需要主动向客户端发起请求的情况，这时我们就需要在服务端保存一个客户端的 "),t("code",[s._v("Binder")]),s._v(" 实例，在需要时服务端就可以通过这个 "),t("code",[s._v("Binder")]),s._v(" 来向客户端发出请求。")]),s._v(" "),t("p",[s._v("由于一个服务端可能会同时连接多个客户端，所以对于客户端注册过来的 "),t("code",[s._v("Binder")]),s._v("实例，我们需要使用一个"),t("code",[s._v("List")]),s._v("集合来保存它，如果使用"),t("code",[s._v("ArrayList")]),s._v("或"),t("code",[s._v("CopyOnWriteArrayList")]),s._v("保存「客户端」的"),t("code",[s._v("Binder")]),s._v("实例，需要在客户端与服务端的连接断开时，将保存的"),t("code",[s._v("Binder")]),s._v("清除。如果调用已经解除连接的"),t("code",[s._v("Binder")]),s._v("，会抛出"),t("code",[s._v("DeadObjectException")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"_7-remotecallbacklist"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-remotecallbacklist"}},[s._v("#")]),s._v(" 7. RemoteCallbackList")]),s._v(" "),t("p",[t("code",[s._v("RemoteCallbackList")]),s._v("是一个类，它用于管理一组已注册的"),t("code",[s._v("IInterface")]),s._v("回调，并在它们的进程消失时自动从列表中清理它们。"),t("code",[s._v("RemoteCallbackList")]),s._v("通常用于执行从"),t("code",[s._v("Service")]),s._v("到其客户端的回调，实现跨进程通信。\n"),t("code",[s._v("RemoteCallbackList")]),s._v("具有以下优势：")]),s._v(" "),t("ol",[t("li",[s._v("它通过调用"),t("code",[s._v("IInterface.asBinder()")]),s._v("方法，根据底层的唯一"),t("code",[s._v("Binder")]),s._v("来识别每个注册的接口。")]),s._v(" "),t("li",[s._v("它给每个注册的接口附加了一个"),t("code",[s._v("IBinder.DeathRecipient")]),s._v("，这样如果接口所在的进程死亡了，它就可以从列表中清除掉。")]),s._v(" "),t("li",[s._v("它对底层接口列表进行了加锁处理，以应对多线程的并发调用，同时提供了一种线程安全的方式来遍历列表的快照，而不需要持有锁。\n要使用这个类，需要创建一个实例，并调用它的"),t("code",[s._v("register(E)")]),s._v("和"),t("code",[s._v("unregister(E)")]),s._v("方法作为客户端注册和取消注册服务。要回调到注册的客户端，请使用"),t("code",[s._v("beginBroadcast()")]),s._v("、"),t("code",[s._v("getBroadcastItem(int)")]),s._v("和"),t("code",[s._v("finishBroadcast()")]),s._v("方法。")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ICalculator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Stub")]),s._v(" mICalculator "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ICalculator"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Stub")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RemoteCallbackList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ICalculatorListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" mListeners "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RemoteCallbackList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("registerListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ICalculatorListener")]),s._v(" listener"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RemoteException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("i")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"registerListener: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" listener"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        mListeners"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("register")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("listener"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("notifyClients")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unregisterListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ICalculatorListener")]),s._v(" listener"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RemoteException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("i")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unregisterListener: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" listener"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        mListeners"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("unregister")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("listener"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("i")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"unregisterListener: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" mListeners"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getRegisteredCallbackCount")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("notifyClients")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RemoteException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" n "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mListeners"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("beginBroadcast")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            mListeners"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getBroadcastItem")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("onCallback")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n        mListeners"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("finishBroadcast")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("如果我们想知道客户端和服务器端什么时候断开的，可以在客户端自定义一个"),t("code",[s._v("RemoteCallbackList")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("MyRemoteCallbackList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("IInterface")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RemoteCallbackList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果客户端和服务端断开连接会回调该方法")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("onCallbackDied")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),s._v(" callback"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Object")]),s._v(" cookie"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("super")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("onCallbackDied")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("callback"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cookie"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("e")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MyRemoteCallbackList"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"onCallbackDied: callback: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" callback "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" cookie: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" cookie"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("服务端注册监听的时候添加"),t("code",[s._v("cookie")]),s._v("参数")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("registerListener")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ICalculatorListener")]),s._v(" listener"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RemoteException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("i")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"registerListener: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" listener"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sleep")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("catch")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v(" e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("printStackTrace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    mListeners"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("register")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("listener"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("notifyClients")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("当我们手动把客户端杀掉时，会收到回调：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("2023-05-28 15:29:12.977 6590-6605/com.ihblu.service I/AIDLCalculatorService: registerListener: com.ihblu.sdk.listener.ICalculatorListener$Stub$Proxy@b0013fd\n2023-05-28 15:29:26.334 6590-6605/com.ihblu.service E/MyRemoteCallbackList: onCallbackDied: callback: com.ihblu.sdk.listener.ICalculatorListener$Stub$Proxy@b0013fd cookie: hello\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"_8-服务端存在多个binder"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-服务端存在多个binder"}},[s._v("#")]),s._v(" 8. 服务端存在多个Binder")]),s._v(" "),t("p",[s._v("上面示例中，我们只定义了一个 "),t("code",[s._v("Binder")]),s._v(" 实例即 "),t("code",[s._v("ICalculator")]),s._v(" ，当客户端需要与服务端进行多种不同的业务交互时，就需要在服务端定义多个不同的"),t("code",[s._v("Binder")]),s._v("实例，此时我们可以引入"),t("code",[s._v("BinderPool")]),s._v("机制来优化这种场景。\n"),t("code",[s._v("BinderPool")]),s._v("是一个用于管理和分发"),t("code",[s._v("Binder")]),s._v("的机制，它可以让不同的模块之间通过一个统一的"),t("code",[s._v("Service")]),s._v("进行"),t("code",[s._v("Binder")]),s._v("通信，客户端通过一个"),t("code",[s._v("Binder")]),s._v("连接到服务端，然后根据不同的业务需求，获取到对应的"),t("code",[s._v("Binder")]),s._v("实例，从而实现跨进程通信。这样可以减少客户端和服务端之间的连接数，提高性能和稳定性。")]),s._v(" "),t("h2",{attrs:{id:"_9-aidl的权限控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-aidl的权限控制"}},[s._v("#")]),s._v(" 9. AIDL的权限控制")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("控制客户端的绑定权限")]),s._v("\n在对外暴露"),t("code",[s._v("AIDL")]),s._v("接口时，我们并不希望所有的客户端都可以连接到"),t("code",[s._v("Service")]),s._v("中，那么我们可以自定义权限，限制具有指定权限的应用才可以绑定到服务端。")]),s._v(" "),t("p",[s._v("在"),t("code",[s._v("Service")]),s._v("的清单文件中，添加一个"),t("code",[s._v("android:permission")]),s._v("属性，指定一个自定义的权限名称。这样，只有拥有这个权限的客户端才能绑定到这个"),t("code",[s._v("Service")])]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("permission")]),s._v("    \n    "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("android:")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("com.example.permission.BIND_MY_SERVICE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("android:")]),s._v("protectionLevel")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("signature"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("/>")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("service")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("android:")]),s._v("name")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v(".MyService"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),s._v("\n         "),t("span",{pre:!0,attrs:{class:"token attr-name"}},[t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("android:")]),s._v("permission")]),t("span",{pre:!0,attrs:{class:"token attr-value"}},[t("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("com.example.permission.BIND_MY_SERVICE"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    ...\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("service")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("queries"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("android")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.ihblu.service"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("queries"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uses")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("permission android"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.ihblu.permission.BIND_MY_SERVICE"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[t("code",[s._v("protectionLevel")]),s._v("有以下几种：")]),s._v(" "),t("ol",[t("li",[t("code",[s._v("normal")]),s._v("：默认值，表示低风险的权限，系统会自动授予请求的应用，无需用户同意。")]),s._v(" "),t("li",[t("code",[s._v("dangerous")]),s._v("：表示高风险的权限，涉及用户私人数据或设备控制权，系统会向用户显示并确认是否授予请求的应用。")]),s._v(" "),t("li",[t("code",[s._v("signature")]),s._v("：表示只有当请求的应用和声明权限的应用使用相同的证书签名时，系统才会授予的权限。")]),s._v(" "),t("li",[t("code",[s._v("signatureOrSystem")]),s._v("：表示只有当请求的应用和声明权限的应用使用相同的证书签名，或者请求的应用位于系统映像的专用文件夹中时，系统才会授予的权限。")])]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[s._v("这个参数在 API 级别 23中已弃用，建议使用 signature。\n")])])])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("控制客户端对接口的使用权限")]),s._v("\n除了控制连接"),t("code",[s._v("Service")]),s._v("的权限，多数时候我们还需要控制"),t("code",[s._v("aidl")]),s._v("接口的请求权限，避免客户端可以随意访问一些危险的"),t("code",[s._v("aidl")]),s._v("接口")]),s._v(" "),t("p",[t("code",[s._v("checkCallingPermission()")]),s._v("和 "),t("code",[s._v("enforceCallingPermission()")]),s._v("都可以用于权限检查，区别在于")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("int checkCallingPermission(String permission)")]),s._v("：检查调用者是否有指定的权限。如果没有调用者或者调用者不是 "),t("code",[s._v("IPC")]),s._v("，则返回-1，如果"),t("code",[s._v("IPC")]),s._v("调用者有指定的权限则返回 0 。")]),s._v(" "),t("li",[t("code",[s._v("void enforceCallingPermission")]),s._v("：检查调用者是否有指定的权限，如果没有或者没有调用者或者调用者不是 "),t("code",[s._v("IPC")]),s._v("，则抛出 "),t("code",[s._v("SecurityException")]),s._v(" 异常。")])]),s._v(" "),t("p",[s._v("除了上面的方法，还有以下一些较为常用的用于检查"),t("code",[s._v("AIDL")]),s._v("接口的方法。")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("int checkPermission(String permission, int pid, int uid)")]),s._v("：检查指定的进程和用户ID是否有指定的权限。")]),s._v(" "),t("li",[t("code",[s._v("int checkCallingOrSelfPermission(String permission)")]),s._v("：检查调用者或者自身是否有指定的权限，如果没有调用者，则相当于 "),t("code",[s._v("checkSelfPermission")]),s._v("。这个方法要谨慎使用，因为它可能会授予缺少权限的恶意应用访问受保护的资源。")]),s._v(" "),t("li",[t("code",[s._v("int checkSelfPermission(String permission)")]),s._v("：检查自身是否有指定的权限，这是运行时动态检查的方式，通常用于请求危险权限。")]),s._v(" "),t("li",[t("code",[s._v("void enforcePermission(String permission, int pid, int uid, @Nullable String message)")]),s._v("：检查指定的进程和用户 ID 是否有指定的权限，如果没有，则抛出 "),t("code",[s._v("SecurityException")]),s._v(" 异常。")]),s._v(" "),t("li",[t("code",[s._v("void enforceCallingOrSelfPermission(String permission, @Nullable String message)")]),s._v("：检查调用者或者自身是否有指定的权限，如果没有，则抛出 "),t("code",[s._v("SecurityException")]),s._v(" 异常。如果没有调用者，则相当于 "),t("code",[s._v("enforcePermission")]),s._v("。这个方法要谨慎使用，因为它可能会授予缺少权限的恶意应用访问受保护的资源。")])]),s._v(" "),t("p",[t("code",[s._v("Binder.getCallingPid()")]),s._v("和"),t("code",[s._v("Binder.getCallingUid()")]),s._v("都是用来获取调用者（即发送"),t("code",[s._v("Binder")]),s._v("请求的进程）的信息的。区别在于：")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("Binder.getCallingPid()")]),s._v("方法返回调用者的进程"),t("code",[s._v("ID")]),s._v("，它是一个"),t("code",[s._v("int")]),s._v("类型的值，可以用来区分不同的进程。这个方法是从"),t("code",[s._v("API 1")]),s._v("就存在的，可以在任何版本的"),t("code",[s._v("Android")]),s._v("上使用。")]),s._v(" "),t("li",[t("code",[s._v("Binder.getCallingUid()")]),s._v("方法返回调用者的用户"),t("code",[s._v("ID")]),s._v("，它是一个"),t("code",[s._v("int")]),s._v("类型的值，可以用来区分不同的用户或应用。这个方法是从"),t("code",[s._v("API 1")]),s._v("就存在的，可以在任何版本的"),t("code",[s._v("Android")]),s._v("上使用。\n这两个方法都只能在"),t("code",[s._v("Binder")]),s._v("的方法中调用，否则会返回当前进程或者用户的"),t("code",[s._v("ID")]),s._v("。它们可以用来检查调用者是否拥有某些权限，或者进行一些安全验证。")])]),s._v(" "),t("blockquote",[t("p",[s._v("在"),t("code",[s._v("Service")]),s._v("中使用这两个方法时需要注意，接口不能使用"),t("code",[s._v("oneway")]),s._v("修饰，不然是获取不到"),t("code",[s._v("Pid")]),s._v("的")])]),s._v(" "),t("p",[s._v("新定义一个接口方法为"),t("code",[s._v("optionPermission()")]),s._v("，在服务端的"),t("code",[s._v("AndroidManifest.xml")]),s._v("中声明需要的权限：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("permission android"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.ihblu.permission.HELLO"')]),s._v("\n        android"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("protectionLevel"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"signature"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("application\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("在"),t("code",[s._v("service")]),s._v("中的实现中判断是否拥有权限：")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PERMISSION")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.ihblu.permission.HELLO"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("optionPermission")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RemoteException")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" checked "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" mContext"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("checkCallingPermission")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PERMISSION")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("PackageManager")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PERMISSION_GRANTED")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" checked"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("i")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TAG")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"optionPermission: "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("客户端需要在"),t("code",[s._v("AndroidManifest.xml")]),s._v("中声明这个权限，否则"),t("code",[s._v("result")]),s._v("为"),t("code",[s._v("false")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uses")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("permission android"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.ihblu.permission.HELLO"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"_10-封装aidl-sdk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-封装aidl-sdk"}},[s._v("#")]),s._v(" 10. 封装AIDL SDK")]),s._v(" "),t("p",[s._v("将"),t("code",[s._v("AIDL")]),s._v("封装成"),t("code",[s._v("SDK")]),s._v("时，一般需要遵守以下原则：")]),s._v(" "),t("ul",[t("li",[s._v("简化客户端的调用成本")]),s._v(" "),t("li",[s._v("隐藏"),t("code",[s._v("Service")]),s._v("重连机制，使调用方无需关心"),t("code",[s._v("Service")]),s._v("重连的具体实现")]),s._v(" "),t("li",[s._v("减少客户端与服务端的不必要的通信次数，提高性能")]),s._v(" "),t("li",[s._v("根据需要进行权限验证")])])])}),[],!1,null,null,null);t.default=n.exports}}]);